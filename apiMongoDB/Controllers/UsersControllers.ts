import { Request, Response } from "express";
import multer from "multer";
import User from "../Models/UserModel"; // Import model User

// C·∫•u h√¨nh multer ƒë·ªÉ x·ª≠ l√Ω form-data
const upload = multer();

// üìå ƒêƒÉng k√Ω ng∆∞·ªùi d√πng (d√πng form-data)
export const userRegistration = [
    upload.none(), // X·ª≠ l√Ω form-data kh√¥ng c√≥ file
    async (req: Request, res: Response): Promise<void> => {
        const { firstName, lastName, email, mobileNo, password } = req.body;

        try {
            // Ki·ªÉm tra email ƒë√£ t·ªìn t·∫°i ch∆∞a
            const existingUser = await User.findOne({ email });
            if (existingUser) {
                res.status(400).json({ error: "Email ƒë√£ t·ªìn t·∫°i!" });
                return;
            }

            // T·∫°o ng∆∞·ªùi d√πng m·ªõi
            const newUser = new User({ firstName, lastName, email, mobileNo, password });
            await newUser.save();

            res.status(201).json({
                message: "User registered successfully!",
                _id: newUser._id,  // Tr·∫£ v·ªÅ _id c·ªßa ng∆∞·ªùi d√πng m·ªõi
                email: newUser.email
            });
        } catch (error: unknown) {
            const err = error as Error;
            res.status(500).json({ error: err.message });
        }
    }
];

// üìå ƒêƒÉng nh·∫≠p ng∆∞·ªùi d√πng (d√πng form-data)
export const userLogin = [
    upload.none(),
    async (req: Request, res: Response): Promise<void> => {
        const { email, password } = req.body;

        try {
            // T√¨m user trong database
            const user = await User.findOne({ email, password });

            if (!user) {
                res.status(401).json({ error: "Email ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng!" });
                return;
            }

            // Tr·∫£ v·ªÅ to√†n b·ªô th√¥ng tin user
            res.status(200).json({
                message: "Login successful!",
                user: user // Tr·∫£ v·ªÅ to√†n b·ªô th√¥ng tin c·ªßa user
            });
        } catch (error: unknown) {
            const err = error as Error;
            res.status(500).json({ error: err.message });
        }
    }
];

